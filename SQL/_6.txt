CREATE TABLE MEAL_ORDER (
  TIME_ORDER TIMESTAMP,
  MEAL_NAME VARCHAR(255),
  PRICE DOUBLE,
  CALORIES INT
);
  
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(NOW(), 'PIZZA', 7.50, 500);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 1 HOUR), 'PASTA', 10.99, 400);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 2 HOUR), 'CARNE', 15.99, 350);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 3 HOUR), 'CIAMBELLA', 1.99, 600);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 4 HOUR), 'TORTA', 3.50, 550);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 1 DAY),'PIZZA', 7.50, 500);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 1 HOUR), 'CARNE', 15.99, 350);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 9 HOUR), 'TORTA', 3.50, 550);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 1 HOUR),'PIZZA', 7.50, 500);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 30 MINUTE),'PIZZA', 7.50, 500);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 8 HOUR), 'CIAMBELLA', 1.99, 600);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 2 HOUR), 'CIAMBELLA', 1.99, 600);
    INSERT INTO MEAL_ORDER (TIME_ORDER, MEAL_NAME, PRICE, CALORIES)
      VALUES(DATE_ADD(NOW(), INTERVAL 35 MINUTE), 'CARBONARA', 7.0, 750);
Using a SELECT statement with a GROUP BY clause and COUNT function, retrieve the number of orders for each meal.

SELECT MEAL_NAME,COUNT(MEAL_NAME) AS TOTAL FROM MEAL_ORDER GROUP BY MEAL_NAME

Using a SELECT statement with a WHERE clause and SUM function, retrieve the total revenue for all meals that have a price greater than â‚¬15.

SELECT MEAL_NAME ,
 COUNT(MEAL_NAME) AS TOTAL_ORDER_PER_MEAL, 
 SUM(PRICE) AS TOTAL_REVENUE
FROM MEAL_ORDER WHERE PRICE>15
GROUP BY MEAL_NAME
ORDER BY TOTAL_ORDER_PER_MEAL DESC

Using a SELECT statement with a GROUP BY clause and COUNT function, retrieve the number of meals that have more than 500 calories.

SELECT MEAL_NAME, COUNT(CALORIES) AS CALORIES_OVER_500
FROM MEAL_ORDER
GROUP BY CALORIES>500
ORDER BY CALORIES DESC

Using a SELECT statement with a WHERE clause and SUM function, retrieve the total price for all meals that have a name containing the letter 'S'.
You can find items that start with the letter s with the following where clause
WHERE LOWER(NAME) LIKE '%s%';

SELECT SUM(PRICE) AS TOTAL_REVENUE_FROM_MEALS_CONTAINS_P
FROM MEAL_ORDER WHERE LOWER(MEAL_NAME) LIKE '%P%';            //HO USATO LA P PERCHE CON LA S AVEVO SOLO PASTA


Using a SELECT statement with a WHERE clause, GROUP BY clause, and COUNT function, retrieve the number of orders for each meal that were ordered before '202X-XX-XX 18:00:00' (Replace the Xs with your current date)

SELECT MEAL_NAME, COUNT(*) AS NUMBER_OF_ORDER_PER_MEAL FROM MEAL_ORDER WHERE TIME_ORDER<'2023-5-17 10:30:00' GROUP BY MEAL_NAME;